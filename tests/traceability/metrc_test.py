"""
Metrc Integration Test | Cannlytics

Author: Keegan Skeate
Contact: keegan@cannlytics.com
Created: Mon Mar 29 14:18:18 2021
License: MIT License

Description:

    Perform required tests for Metrc integration.

    Each Sheet groups tasks by the permissions required to access the necessary endpoints and each chapter section focuses on one group of related API endpoints. 
    Each section contains a table of actions to perform and a list of the information necessary to verify each action has been completed correctly. 
    As you complete each task, be sure to fill in the verification item box next to the task's description.
    The verification items are:
    ID, this is typically a 5 digit number generated by the software and not visible until a GET is done returning the information created. 
    Names created, such as Plant batches or Harvest.
    Plant and Package Tags
    Sales Receipts
    Last Modified Date, this is the date in which the test or actions were ran.
    Sales Date Start and End, this is the date in which you tell the system when sales are performed.
                JSON body or the Response:  Please Minify so it will fit in one cell 
    One of the first things you should do with any API User Key is to run the request GET /facilities/v1, this will show the facilities and permissions that have been set by the state for each facility type.  
    You may view or GET any Information you want in the sandboxes. You should only modify data in the facilities that we direct you to and that you have created. 
    Please do not delete any data that you have not created 

    ALL Actions are to return a Result of 200. IF your action did not return a 200, please email the API Team so we can help you obtain a 200 OK Result. 


    Result
    code
    License Facility
    ID Number 
    Last Modified Date
    Tag Number  
    Request Sent	
    JSON Body Or Response (minified)



Resources:

    https://api-ca.metrc.com/Documentation

"""
import os
from dotenv import load_dotenv
from datetime import datetime

# Import cannlytics locally for testing.
import sys
sys.path.insert(0, os.path.abspath('../..'))
from cannlytics.traceability import metrc # pylint: disable=no-name-in-module, import-error


if __name__ == "__main__":
    
    # Record all requests made to the traceability system!
    now = datetime.now()
    current_time = now.isoformat()
    current_date = now.strftime('%m/%d/%Y')

    print('--------------------------------------------')
    print('Performing Metrc Validation Test')
    print(current_time)
    print('--------------------------------------------')

    # Initialize the Metrc traceability system API.
    load_dotenv()
    vendor_api_key = os.getenv('METRC_TEST_VENDOR_API_KEY')
    user_api_key = os.getenv('METRC_TEST_USER_API_KEY')
    traceability = metrc.authorize(
        vendor_api_key=vendor_api_key,
        user_api_key=user_api_key
    )

    #------------------------------------------------------------------
    # Locations
    #------------------------------------------------------------------

    # Create a new location using: POST /locations/v1/create

    # View the location Created and Updated in Step 1 & 2 by the ID number
    # GET /locations/v1/{id}


    #------------------------------------------------------------------
    # Strains
    #------------------------------------------------------------------

    # Create a new strain using: POST /strains/v1/create

    # Using the strain created in step 1 Change the THC and CBD levels using: POST /strains/v1/update

    # View the Strain created and Updated above by the Strain {ID}: GET /strains/v1/{id}


    #------------------------------------------------------------------
    # Items
    #------------------------------------------------------------------
    
    # Create a item using: POST /items/v1/create

    # Using the Item created in Step 1 Change the Unit Of Measure Type 
    # using: POST /items/v1/update

    # View the Created and Updated Item by the Item ID using: GET /Items/v1/{id}


    #------------------------------------------------------------------
    # Batches
    #------------------------------------------------------------------

    # Create a new plant batch containing
    # 6 plants using: POST /plantbatches/v1/createplantings

    # Create a package containing 3 clones from
    # The Plant Batch ceated in step 1 using:                                                           POST /plantbatches/v1/createpackages

    # Change the growth phase of 2 of the plants created in
    # Step 1 to the Vegetative Stage using:                                                                 POST /plantbatches/v1/changegrowthphase

    # Destroy 1 of the plants using: POST /plantbatches/v1/destroy


    #------------------------------------------------------------------
    # Plants
    #------------------------------------------------------------------

    # Plants Step 1                                                                      Using one of the Plants from Step 3 in the                      Plant batch section, Change growth phase from                                Vegetative to Flowering using:POST /plants/v1/changegrowthphases

    # Plants Step 2                                                                            Using the now Flowering Plant in step above,                                      Move that plant to a different room using:                                                       POST /plants/v1/moveplants

    # Plants Step 3                                                                                Using the other Plant created by Step 3                                       in the Plant batch section,                                                     Destroy that plant using:                                                         POST /plants/v1/destroyplants

    # Plants Step 4                                                                              Using the Plant now in the Flowering Stage from Step 1                                                         Manicure from the plant using:                                            POST /plants/v1/manicureplants

    # Plants Step 5                                                                               Using the Plant in the Flowering Stage from Step 2      Harvest the plant using:                                                       POST /plants/v1/harvestplants


    #------------------------------------------------------------------
    # Harvest
    #------------------------------------------------------------------

    # Harvest Step 1                                                                 Using the Harvest Created in Step 5 from Plants ,             Create a package using:                                                                           POST /harvests/v1/create/packages

    # Harvest Step 2                                                                 Using the Harvest Created in Step 5 from Plants ,            Remove the remaing weight as Waste (MOISTURE LOSS IS NOT REMOVED AS WASTE) :                                                                                POST /harvests/v1/removewaste

    # Harvest Step 3                                                                 Using the Harvest created in Plants Step 1                Finish that Harvest using:                                                         POST /harvests/v1/finish

    # Harvest Step 4                                                                        Using the Harvest finished in Step 3                      Unfinish that Harvest using:                                                                       POST /harvests/v1/unfinish


    #------------------------------------------------------------------
    # Packages
    #------------------------------------------------------------------

    # Packages Step 1                                                                Using the Package created in Harvest Step 1 OR create a package from an existing package that you have found. Note You can create more packages to use in the rest of the evaulation for sales and transfer templates.                                                                      Create a package from another package using: POST /packages/v1/create

    # Packages Step 2                                                               Using the new package created in Packages Step 1                             Change the item of a package using:                                POST/packages/v1/change/item

    # Packages Step 3                                                               Using the new package created in Packages Step 1                             Adjust the weight to 0 using:                                                       POST/packages/v1/adjust

    # Packages Step 4                                                               Using the new package created in Packages Step 1                             Finish a package using:                                                       POST/packages/v1/finish

    # Packages Step 5                                                               Using the new package created in Packages Step 1                             Unfinish a package using:                                                POST/packages/v1/unfinish


    #------------------------------------------------------------------
    # Incoming transfers
    #------------------------------------------------------------------

    #  Step 1a         Set up an external Incoming transfer                                                       POST/transfers/v1/external/incoming

    # Step 1b         Set up another external Incoming transfer                                                       POST/transfers/v1/external/incoming

    # Step 2             Find the two Transfers created in Step 1a and 1b                               by  using the date search                                                           GET/transfers/v1/incoming             

    # Step 3             Update one of the Transfers  created in Step 1 by                                                   PUT/transfers/v1/external/incoming


    #------------------------------------------------------------------
    # Transfer templates
    #------------------------------------------------------------------

    #  Step 1a          Set up a Template                                                                     POST/transfers/v1/templates

    # Step 1b        Set up another Template                                                         POST/transfers/v1/templates

    # Step 2             Find the two Templates created in Step 1a and 1b                               by  using the date search                                                           GET/transfers/v1/templates  

    # Step 3          Find a Template by the Template ID number                           GET/transfers/v1/templates/{id}/deliveries

    # Step 4             Update one of the Templates  created in Step 1 by PUT/transfers/v1/templates


    #------------------------------------------------------------------
    # Outgoing transfers
    #------------------------------------------------------------------

    #  Step 1          Find an Incoming Transfer                                                            GET/transfers/v1/incoming

    # Step 2                 Find an Outgoing  Transfer                                                           GET/transfers/v1/outgoing

    # Step 3        Find a Rejected  Transfer                                                                               GET/transfers/v1/rejected                                  

    # Step 4          Find a Transfer by the Manifest ID number                           GET/transfers/v1/{id}/deliveries

    # Step 5        Find The Packages Using the Delivery ID number                 GET/transfers/v1/delivery/{id}/packages

    # Transfers Wholesale Step 6                                                               Find Packages  Wholesale Pricing  Using the Delivery ID                                                                                     GET/transfers/v1/delivery/{id}/packages/wholesale


    #------------------------------------------------------------------
    # Lab results
    #------------------------------------------------------------------

    # Record a lab test result using:                              POST /labtests/v1/record

    #------------------------------------------------------------------
    # Sales
    #------------------------------------------------------------------

    #  Step 1                                                                             Create a sales receipt using:                                         POST /sales/v1/receipts                                              Using a package                                                               created in the Package Tab of the evaluation.

    # Step 2                                                                       Update the sales receipt created in Step 1 using:                                                                              PUT /sales/v1/receipts 

    # Step 3                                                                           Void the sales receipt created in Step 1 using:                                                                             DELETE /sales/v1/receipts/{id}

